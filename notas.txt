long t = millis();

pt_wait_while(nombre_pt, (t + tiempo que queremos que espere) < millis());

=======================================================================================================================

int pinBuzzer = 13;

int notas[] = { 261, 293, 329, 349, 391, 440, 493, 523 }; // Notas básicas
int duraciones[] = { 200, 400, 600 }; // Duraciones básicas

void nota(int frecuencia, int duracion) {
    tone(pinBuzzer, frecuencia, duracion);
    delay(duracion);
    noTone(pinBuzzer);
    delay(50);
}

void reproducirMelodia() {
    int melodia[] = { 0, 2, 4, 5, 6, 7, 6, 5 }; // Índices en el array de notas
    int tiempos[] = { 1, 1, 2, 2, 1, 1, 2, 2 }; // Índices en el array de duraciones

    for (int i = 0; i < 8; i++) {
        nota(notas[melodia[i]], duraciones[tiempos[i]]);
    }
}

void setup() {
    pinMode(pinBuzzer, OUTPUT);
}

void loop() {
    reproducirMelodia();
    delay(2000);
}



=======================================================================================================================


#include <notas.txt>

int pinBuzzer = 13;

int cancion1[] = {
  NOTE_E5, NOTE_E5, NOTE_E5,
  NOTE_E5, NOTE_E5, NOTE_E5,
  NOTE_E5, NOTE_G5, NOTE_C5, NOTE_D5,
  NOTE_E5,
  NOTE_F5, NOTE_F5, NOTE_F5, NOTE_F5,
  NOTE_F5, NOTE_E5, NOTE_E5, NOTE_E5, NOTE_E5,
  NOTE_E5, NOTE_D5, NOTE_D5, NOTE_E5,
  NOTE_D5, NOTE_G5
};

int tempoCancion1[] = {
  8, 8, 4,
  8, 8, 4,
  8, 8, 8, 8,
  2,
  8, 8, 8, 8,
  8, 8, 8, 16, 16,
  8, 8, 8, 8,
  4, 4
};

void setup() {
    pinMode(pinBuzzer, OUTPUT);
}

void loop() {
    int duracion = sizeof(cancion1) / sizeof(int);
  
    for (int notaActual = 0 ; notaActual < duracion ; notaActual++) {
      
      int duracionNota = 2000 / tempoCancion1[notaActual];

      tone(pinBuzzer, cancion1[notaActual], duracionNota);

      int pausaEntreNotas = duracionNota * 1.15;
      delay(pausaEntreNotas);
      
      noTone(pinBuzzer);
      
      delay(10);
    }
}